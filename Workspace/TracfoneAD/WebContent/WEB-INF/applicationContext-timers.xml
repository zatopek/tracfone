<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">
    <!--
        This applicationContext-timers.xml configures Quartz scheduler with CommonJ
    -->
    <!-- SampleJob defines Sample Job -->
    <!--
    <bean id="sampleJob" class="org.springframework.scheduling.quartz.JobDetailBean">
        <property name="jobClass" value="com.jacada.jad.schedule.SampleJob"/>
    </bean>
    -->
    <!-- cronSamepleTrigger defines Sample trigger, that will be executed according cronExpression -->
    <!--
    <bean id="cronSamepleTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="sampleJob"/>
        <property name="cronExpression" value="0 0/1 * * * ?"/>
    </bean>
    -->

    <bean id="taskDueTimerListener" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.jacada.jad.taskmanager.runnables.TaskDueTimerListener"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="taskReminderTimerListener" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.jacada.jad.taskmanager.runnables.TaskReminderTimerListener"/>
        <property name="durability" value="true"/>
    </bean>

    <bean id="taskDueTimerListenerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean" scope="prototype">
        <property name="jobDetail" ref="taskDueTimerListener" />
        <property name="repeatCount" value="0"/>
    </bean>
    <bean id="taskReminderTimerListenerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean" scope="prototype">
        <property name="jobDetail" ref="taskReminderTimerListener" />
        <property name="repeatCount" value="0"/>
    </bean>
    
    <bean id="taskEscalateTimerListener" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.jacada.jad.taskmanager.runnables.TaskEscalateTimerListener"/>
        <property name="durability" value="true"/>
    </bean>
    <bean id="taskEscalateTimerListenerTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean" scope="prototype">
        <property name="jobDetail" ref="taskEscalateTimerListener" />
        <property name="repeatCount" value="0"/>
    </bean>
    

    <bean id="systemScheduler" parent="basedScheduler">
        <property name="jobDetails">
            <list>
                <ref bean="taskDueTimerListener"/>
                <ref bean="taskReminderTimerListener"/>
                <ref bean="taskEscalateTimerListener"/>
                <!--<ref bean="sampleJob"/>-->
            </list>
        </property>
        <property name="triggers">
            <list>
                <!--<ref bean="cronSamepleTrigger"/>-->
            </list>
        </property>
        <property name="globalJobListeners">
            <list>

            </list>
        </property>

        <property name="schedulerListeners">
            <list>

            </list>
        </property>
        <property name="taskExecutor" ref="taskExecutor"/>
        <property name="applicationContextSchedulerContextKey">
            <value>applicationContext</value>
        </property>        	    
    </bean>
    <!-- Configure a new CommonJ task executer-->
    <bean id="taskExecutor" class="org.springframework.scheduling.commonj.WorkManagerTaskExecutor">
        <property name="workManagerName" ref="workManagerJndiName"/>
        <property name="resourceRef" value="true"/>
    </bean>
    
    <bean id="timersDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <property name="jndiTemplate">
          <ref bean="jndiTemplate"/>
        </property>
        <property name="jndiName" ref="dataSourceJndiName" />
      </bean>
    <bean id="jndiTemplate" class="org.springframework.jndi.JndiTemplate" />
    
</beans>